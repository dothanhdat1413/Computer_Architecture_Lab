$date
	Wed Apr 16 11:36:09 2025
$end
$version
	QuestaSim Version 2021.1
$end
$timescale
	1ns
$end

$scope module test_Imm_Gen $end
$var parameter 3 ! I_S_FORMAT $end
$var parameter 3 " B_FORMAT $end
$var parameter 3 # U_FORMAT $end
$var reg 3 $ opcode [2:0] $end
$var reg 21 % imm [20:0] $end
$var wire 1 & imm_out [31] $end
$var wire 1 ' imm_out [30] $end
$var wire 1 ( imm_out [29] $end
$var wire 1 ) imm_out [28] $end
$var wire 1 * imm_out [27] $end
$var wire 1 + imm_out [26] $end
$var wire 1 , imm_out [25] $end
$var wire 1 - imm_out [24] $end
$var wire 1 . imm_out [23] $end
$var wire 1 / imm_out [22] $end
$var wire 1 0 imm_out [21] $end
$var wire 1 1 imm_out [20] $end
$var wire 1 2 imm_out [19] $end
$var wire 1 3 imm_out [18] $end
$var wire 1 4 imm_out [17] $end
$var wire 1 5 imm_out [16] $end
$var wire 1 6 imm_out [15] $end
$var wire 1 7 imm_out [14] $end
$var wire 1 8 imm_out [13] $end
$var wire 1 9 imm_out [12] $end
$var wire 1 : imm_out [11] $end
$var wire 1 ; imm_out [10] $end
$var wire 1 < imm_out [9] $end
$var wire 1 = imm_out [8] $end
$var wire 1 > imm_out [7] $end
$var wire 1 ? imm_out [6] $end
$var wire 1 @ imm_out [5] $end
$var wire 1 A imm_out [4] $end
$var wire 1 B imm_out [3] $end
$var wire 1 C imm_out [2] $end
$var wire 1 D imm_out [1] $end
$var wire 1 E imm_out [0] $end

$scope module DUT $end
$var parameter 3 F I_S_FORMAT $end
$var parameter 3 G B_J_FORMAT $end
$var parameter 3 H U_FORMAT $end
$var wire 1 I opcode [2] $end
$var wire 1 J opcode [1] $end
$var wire 1 K opcode [0] $end
$var wire 1 L imm [20] $end
$var wire 1 M imm [19] $end
$var wire 1 N imm [18] $end
$var wire 1 O imm [17] $end
$var wire 1 P imm [16] $end
$var wire 1 Q imm [15] $end
$var wire 1 R imm [14] $end
$var wire 1 S imm [13] $end
$var wire 1 T imm [12] $end
$var wire 1 U imm [11] $end
$var wire 1 V imm [10] $end
$var wire 1 W imm [9] $end
$var wire 1 X imm [8] $end
$var wire 1 Y imm [7] $end
$var wire 1 Z imm [6] $end
$var wire 1 [ imm [5] $end
$var wire 1 \ imm [4] $end
$var wire 1 ] imm [3] $end
$var wire 1 ^ imm [2] $end
$var wire 1 _ imm [1] $end
$var wire 1 ` imm [0] $end
$var reg 32 a imm_out [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 $
b1010101011 %
b1010101011 a
b1 !
b11 "
b100 #
b1 F
b11 G
b100 H
1E
1D
0C
1B
0A
1@
0?
1>
0=
1<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
1`
1_
0^
1]
0\
1[
0Z
1Y
0X
1W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
1K
0J
0I
$end
#10
b10101010101 %
b11 $
1J
0_
1^
0]
1\
0[
1Z
0Y
1X
0W
1V
b101010101010 a
0E
1:
#20
b10101011110011011110 %
b100 $
0K
0J
1I
0`
1_
1]
1Y
0X
1U
1T
1S
1Q
1O
1M
b10101011110011011110000000000000 a
0D
0B
0@
0>
0<
0:
18
17
16
15
13
12
1/
1.
1-
1,
1*
1(
1&
#30
b111 $
b0 %
0_
0^
0]
0\
0Z
0Y
0V
0U
0T
0S
0Q
0O
0M
1K
1J
b0 a
08
07
06
05
03
02
0/
0.
0-
0,
0*
0(
0&
