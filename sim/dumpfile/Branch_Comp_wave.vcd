$date
	Wed Apr 16 11:34:58 2025
$end
$version
	QuestaSim Version 2021.1
$end
$timescale
	1ns
$end

$scope module test_Branch_Comp $end
$var reg 32 ! operand_0 [31:0] $end
$var reg 32 " operand_1 [31:0] $end
$var reg 1 # BrUn $end
$var wire 1 $ BrEq $end
$var wire 1 % BrLT $end

$scope module DUT $end
$var wire 1 & operand_0 [31] $end
$var wire 1 ' operand_0 [30] $end
$var wire 1 ( operand_0 [29] $end
$var wire 1 ) operand_0 [28] $end
$var wire 1 * operand_0 [27] $end
$var wire 1 + operand_0 [26] $end
$var wire 1 , operand_0 [25] $end
$var wire 1 - operand_0 [24] $end
$var wire 1 . operand_0 [23] $end
$var wire 1 / operand_0 [22] $end
$var wire 1 0 operand_0 [21] $end
$var wire 1 1 operand_0 [20] $end
$var wire 1 2 operand_0 [19] $end
$var wire 1 3 operand_0 [18] $end
$var wire 1 4 operand_0 [17] $end
$var wire 1 5 operand_0 [16] $end
$var wire 1 6 operand_0 [15] $end
$var wire 1 7 operand_0 [14] $end
$var wire 1 8 operand_0 [13] $end
$var wire 1 9 operand_0 [12] $end
$var wire 1 : operand_0 [11] $end
$var wire 1 ; operand_0 [10] $end
$var wire 1 < operand_0 [9] $end
$var wire 1 = operand_0 [8] $end
$var wire 1 > operand_0 [7] $end
$var wire 1 ? operand_0 [6] $end
$var wire 1 @ operand_0 [5] $end
$var wire 1 A operand_0 [4] $end
$var wire 1 B operand_0 [3] $end
$var wire 1 C operand_0 [2] $end
$var wire 1 D operand_0 [1] $end
$var wire 1 E operand_0 [0] $end
$var wire 1 F operand_1 [31] $end
$var wire 1 G operand_1 [30] $end
$var wire 1 H operand_1 [29] $end
$var wire 1 I operand_1 [28] $end
$var wire 1 J operand_1 [27] $end
$var wire 1 K operand_1 [26] $end
$var wire 1 L operand_1 [25] $end
$var wire 1 M operand_1 [24] $end
$var wire 1 N operand_1 [23] $end
$var wire 1 O operand_1 [22] $end
$var wire 1 P operand_1 [21] $end
$var wire 1 Q operand_1 [20] $end
$var wire 1 R operand_1 [19] $end
$var wire 1 S operand_1 [18] $end
$var wire 1 T operand_1 [17] $end
$var wire 1 U operand_1 [16] $end
$var wire 1 V operand_1 [15] $end
$var wire 1 W operand_1 [14] $end
$var wire 1 X operand_1 [13] $end
$var wire 1 Y operand_1 [12] $end
$var wire 1 Z operand_1 [11] $end
$var wire 1 [ operand_1 [10] $end
$var wire 1 \ operand_1 [9] $end
$var wire 1 ] operand_1 [8] $end
$var wire 1 ^ operand_1 [7] $end
$var wire 1 _ operand_1 [6] $end
$var wire 1 ` operand_1 [5] $end
$var wire 1 a operand_1 [4] $end
$var wire 1 b operand_1 [3] $end
$var wire 1 c operand_1 [2] $end
$var wire 1 d operand_1 [1] $end
$var wire 1 e operand_1 [0] $end
$var wire 1 f BrUn $end
$var reg 1 g BrEq $end
$var reg 1 h BrLT $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1100100 !
b1100100 "
0#
1g
0h
1$
0%
0f
0e
0d
1c
0b
0a
1`
1_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
1C
0B
0A
1@
1?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
$end
#10
1#
1f
#20
b11111111111111111111111111110110 !
b101 "
0#
1e
0`
0_
1D
1A
1>
1=
1<
1;
1:
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
1,
1+
1*
1)
1(
1'
1&
0f
0g
1h
0$
1%
#30
b11111111111111111111111111110000 !
1#
0D
0C
1f
0h
0%
#40
b11001000 !
b1100100 "
0#
0e
1`
1_
1B
0A
0@
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0f
#50
b0 !
b0 "
1#
0c
0`
0_
0B
0?
0>
1f
1g
1$
